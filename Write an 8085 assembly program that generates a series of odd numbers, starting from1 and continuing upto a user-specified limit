LXI H, 4000H    ; Load starting memory address for storing odd numbers
MVI B, 01H      ; Initialize counter with 1
LDA 2000H       ; Load specified limit from memory location 2000H into A
MOV D, A        ; Move limit to D
LOOP: MOV A, B  ; Move counter value to accumulator
MOV M, A        ; Store the odd number in memory
INX H           ; Increment memory pointer
INR B           ; Increment counter by 1
INR B           ; Increment again to get the next odd number
CMP D           ; Compare counter with limit
JC LOOP         ; Jump to LOOP if counter < limit
HLT             ; Halt the program
